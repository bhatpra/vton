allow_embedding: false
dependencies: []
metadata: {description: 'Upload user, cloth and see virtual try on', title: DSI Virtual Try on}
name: VTON
native_deps:
  head_html: |
    <script>
      // A JS function to compress an image file to a given maxWidth (pixels).
      // It returns a promise that resolves with a base64 data URL of the compressed image.

      function compressImage(file, maxWidth) {
        return new Promise((resolve, reject) => {
          const reader = new FileReader();
          reader.onload = function(e) {
            const img = new Image();
            img.onload = function() {
              // Calculate new dimensions, maintaining aspect ratio
              let width = img.width;
              let height = img.height;
              if (width > maxWidth) {
                height = Math.floor((maxWidth / width) * height);
                width = maxWidth;
              }

              // Create an off-screen canvas and draw the resized image
              const canvas = document.createElement('canvas');
              canvas.width = width;
              canvas.height = height;
              const ctx = canvas.getContext('2d');
              ctx.drawImage(img, 0, 0, width, height);

              // Convert canvas to data URL (you can adjust image quality here if you want)
              // e.g. canvas.toDataURL('image/jpeg', 0.7) for JPEG at 70% quality
              // Using PNG here, but JPEG often yields smaller files if some quality loss is acceptable
              //const compressedDataUrl = canvas.toDataURL('image/png');
              const compressedDataUrl = canvas.toDataURL('image/jpeg', 0.7);

              resolve(compressedDataUrl);
            };
            img.onerror = function(err) {
              reject(err);
            };
            img.src = e.target.result;
          };
          reader.onerror = function(err) {
            reject(err);
          };
          reader.readAsDataURL(file);
        });
      }

      // We'll expose this to Anvil's Python code via window.compressImage
      window.compressImage = compressImage;
    </script>
package_name: VTON
renamed: true
runtime_options:
  client_version: '3'
  server_spec: {base: python310-machine-learning}
  server_version: python3-sandbox
  version: 2
services:
- client_config: {}
  server_config: {}
  source: /runtime/services/tables.yml
startup_form: Form1
